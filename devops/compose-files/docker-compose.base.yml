version: "3.8"

services:

  calculation-db:
    image: postgres:16
    container_name: calculation-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: calculation_db
      POSTGRES_USER_FILE: /run/secrets/calculation_db_username
      POSTGRES_PASSWORD_FILE: /run/secrets/calculation_db_password
      PGDATA: /var/lib/postgresql/data/pgdata
    secrets:
      - calculation_db_username
      - calculation_db_password
    volumes:
      - calculation_db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_net

  api-server:
    build:
      context: ../../
      dockerfile: Dockerfile
    depends_on:
      - calculation-db
    restart: unless-stopped
    volumes:
      - ../configs/config.${AYOMI_ENV}.yml:/CONFIG:ro
    secrets:
      - calculation_db_username
      - calculation_db_password
    ports:
      - "8000:8000"
    networks:
      - app_net


secrets:
  calculation_db_username:
    file: ../secrets/calculation_db_username.txt
  calculation_db_password:
    file: ../secrets/calculation_db_password.txt

# Only for this task, we can handle this based on the environments (e.g: dev, staging, prod)
volumes:
  calculation_db:

networks:
  app_net:
    driver: bridge